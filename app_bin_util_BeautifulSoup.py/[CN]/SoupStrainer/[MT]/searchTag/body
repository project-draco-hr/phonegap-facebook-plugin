def searchTag(self, markupName=None, markupAttrs={}):
    found = None
    markup = None
    if isinstance(markupName, Tag):
        markup = markupName
        markupAttrs = markup
    callFunctionWithTagData = (callable(self.name) and (not isinstance(markupName, Tag)))
    if ((not self.name) or callFunctionWithTagData or (markup and self._matches(markup, self.name)) or ((not markup) and self._matches(markupName, self.name))):
        if callFunctionWithTagData:
            match = self.name(markupName, markupAttrs)
        else:
            match = True
            markupAttrMap = None
            for (attr, matchAgainst) in self.attrs.items():
                if (not markupAttrMap):
                    if hasattr(markupAttrs, 'get'):
                        markupAttrMap = markupAttrs
                    else:
                        markupAttrMap = {}
                        for (k, v) in markupAttrs:
                            markupAttrMap[k] = v
                attrValue = markupAttrMap.get(attr)
                if (not self._matches(attrValue, matchAgainst)):
                    match = False
                    break
        if match:
            if markup:
                found = markup
            else:
                found = markupName
    return found

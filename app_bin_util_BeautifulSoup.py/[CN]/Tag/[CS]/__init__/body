def __init__(self, parser, name, attrs=None, parent=None, previous=None):
    'Basic constructor.'
    self.parserClass = parser.__class__
    self.isSelfClosing = parser.isSelfClosingTag(name)
    self.name = name
    if (attrs is None):
        attrs = []
    elif isinstance(attrs, dict):
        attrs = attrs.items()
    self.attrs = attrs
    self.contents = []
    self.setup(parent, previous)
    self.hidden = False
    self.containsSubstitutions = False
    self.convertHTMLEntities = parser.convertHTMLEntities
    self.convertXMLEntities = parser.convertXMLEntities
    self.escapeUnrecognizedEntities = parser.escapeUnrecognizedEntities
    convert = (lambda (k, val): (k, re.sub('&(#\\d+|#x[0-9a-fA-F]+|\\w+);', self._convertEntities, val)))
    self.attrs = map(convert, self.attrs)

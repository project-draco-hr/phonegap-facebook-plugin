def __init__(self, markup, overrideEncodings=[], smartQuotesTo='xml', isHTML=False):
    self.declaredHTMLEncoding = None
    (self.markup, documentEncoding, sniffedEncoding) = self._detectEncoding(markup, isHTML)
    self.smartQuotesTo = smartQuotesTo
    self.triedEncodings = []
    if ((markup == '') or isinstance(markup, unicode)):
        self.originalEncoding = None
        self.unicode = unicode(markup)
        return
    u = None
    for proposedEncoding in overrideEncodings:
        u = self._convertFrom(proposedEncoding)
        if u:
            break
    if (not u):
        for proposedEncoding in (documentEncoding, sniffedEncoding):
            u = self._convertFrom(proposedEncoding)
            if u:
                break
    if ((not u) and chardet and (not isinstance(self.markup, unicode))):
        u = self._convertFrom(chardet.detect(self.markup)['encoding'])
    if (not u):
        for proposed_encoding in ('utf-8', 'windows-1252'):
            u = self._convertFrom(proposed_encoding)
            if u:
                break
    self.unicode = u
    if (not u):
        self.originalEncoding = None

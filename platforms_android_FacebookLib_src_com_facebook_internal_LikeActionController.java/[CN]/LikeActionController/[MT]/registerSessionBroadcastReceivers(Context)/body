{
  LocalBroadcastManager broadcastManager=LocalBroadcastManager.getInstance(context);
  IntentFilter filter=new IntentFilter();
  filter.addAction(Session.ACTION_ACTIVE_SESSION_UNSET);
  filter.addAction(Session.ACTION_ACTIVE_SESSION_CLOSED);
  filter.addAction(Session.ACTION_ACTIVE_SESSION_OPENED);
  broadcastManager.registerReceiver(new BroadcastReceiver(){
    @Override public void onReceive(    Context receiverContext,    Intent intent){
      if (isPendingBroadcastReset) {
        return;
      }
      String action=intent.getAction();
      final boolean shouldClearDisk=Utility.areObjectsEqual(Session.ACTION_ACTIVE_SESSION_UNSET,action) || Utility.areObjectsEqual(Session.ACTION_ACTIVE_SESSION_CLOSED,action);
      isPendingBroadcastReset=true;
      final Context broadcastContext=receiverContext;
      handler.postDelayed(new Runnable(){
        @Override public void run(){
          if (shouldClearDisk) {
            objectSuffix=(objectSuffix + 1) % MAX_OBJECT_SUFFIX;
            broadcastContext.getSharedPreferences(LIKE_ACTION_CONTROLLER_STORE,Context.MODE_PRIVATE).edit().putInt(LIKE_ACTION_CONTROLLER_STORE_OBJECT_SUFFIX_KEY,objectSuffix).apply();
            cache.clear();
            controllerDiskCache.clearCache();
          }
          broadcastAction(broadcastContext,null,ACTION_LIKE_ACTION_CONTROLLER_DID_RESET);
          isPendingBroadcastReset=false;
        }
      }
,100);
    }
  }
,filter);
}

{
  if ((lastVisibleItem < firstVisibleItem) || (sectionKeys.size() == 0)) {
    return;
  }
  for (int i=lastVisibleItem; i >= 0; i--) {
    SectionAndItem<T> sectionAndItem=getSectionAndItem(i);
    if (sectionAndItem.graphObject != null) {
      String id=getIdOfGraphObject(sectionAndItem.graphObject);
      ImageRequest request=pendingRequests.get(id);
      if (request != null) {
        ImageDownloader.prioritizeRequest(request);
      }
    }
  }
  int start=Math.max(0,firstVisibleItem - prefetchBuffer);
  int end=Math.min(lastVisibleItem + prefetchBuffer,getCount() - 1);
  ArrayList<T> graphObjectsToPrefetchPicturesFor=new ArrayList<T>();
  for (int i=start; i < firstVisibleItem; ++i) {
    SectionAndItem<T> sectionAndItem=getSectionAndItem(i);
    if (sectionAndItem.graphObject != null) {
      graphObjectsToPrefetchPicturesFor.add(sectionAndItem.graphObject);
    }
  }
  for (int i=lastVisibleItem + 1; i <= end; ++i) {
    SectionAndItem<T> sectionAndItem=getSectionAndItem(i);
    if (sectionAndItem.graphObject != null) {
      graphObjectsToPrefetchPicturesFor.add(sectionAndItem.graphObject);
    }
  }
  for (  T graphObject : graphObjectsToPrefetchPicturesFor) {
    URI uri=getPictureUriOfGraphObject(graphObject);
    final String id=getIdOfGraphObject(graphObject);
    boolean alreadyPrefetching=prefetchedProfilePictureIds.remove(id);
    prefetchedProfilePictureIds.add(id);
    if (!alreadyPrefetching) {
      downloadProfilePicture(id,uri,null);
    }
  }
}

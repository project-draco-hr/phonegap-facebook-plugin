{
  LOG.d("App","App.loadUrl(" + url + ","+ props+ ")");
  int wait=0;
  boolean openExternal=false;
  boolean clearHistory=false;
  HashMap<String,Object> params=new HashMap<String,Object>();
  if (props != null) {
    JSONArray keys=props.names();
    for (int i=0; i < keys.length(); i++) {
      String key=keys.getString(i);
      if (key.equals("wait")) {
        wait=props.getInt(key);
      }
 else       if (key.equalsIgnoreCase("openexternal")) {
        openExternal=props.getBoolean(key);
      }
 else       if (key.equalsIgnoreCase("clearhistory")) {
        clearHistory=props.getBoolean(key);
      }
 else {
        Object value=props.get(key);
        if (value == null) {
        }
 else         if (value.getClass().equals(String.class)) {
          params.put(key,(String)value);
        }
 else         if (value.getClass().equals(Boolean.class)) {
          params.put(key,(Boolean)value);
        }
 else         if (value.getClass().equals(Integer.class)) {
          params.put(key,(Integer)value);
        }
      }
    }
  }
  if (wait > 0) {
    try {
synchronized (this) {
        this.wait(wait);
      }
    }
 catch (    InterruptedException e) {
      e.printStackTrace();
    }
  }
  this.webView.showWebPage(url,openExternal,clearHistory,params);
}

{
  PluginResult.Status status=PluginResult.Status.OK;
  String result="";
  try {
    if (action.equals("clearCache")) {
      this.clearCache();
    }
 else     if (action.equals("show")) {
      cordova.getActivity().runOnUiThread(new Runnable(){
        public void run(){
          webView.postMessage("spinner","stop");
        }
      }
);
    }
 else     if (action.equals("loadUrl")) {
      this.loadUrl(args.getString(0),args.optJSONObject(1));
    }
 else     if (action.equals("cancelLoadUrl")) {
    }
 else     if (action.equals("clearHistory")) {
      this.clearHistory();
    }
 else     if (action.equals("backHistory")) {
      this.backHistory();
    }
 else     if (action.equals("overrideButton")) {
      this.overrideButton(args.getString(0),args.getBoolean(1));
    }
 else     if (action.equals("overrideBackbutton")) {
      this.overrideBackbutton(args.getBoolean(0));
    }
 else     if (action.equals("exitApp")) {
      this.exitApp();
    }
    callbackContext.sendPluginResult(new PluginResult(status,result));
    return true;
  }
 catch (  JSONException e) {
    callbackContext.sendPluginResult(new PluginResult(PluginResult.Status.JSON_EXCEPTION));
    return false;
  }
}

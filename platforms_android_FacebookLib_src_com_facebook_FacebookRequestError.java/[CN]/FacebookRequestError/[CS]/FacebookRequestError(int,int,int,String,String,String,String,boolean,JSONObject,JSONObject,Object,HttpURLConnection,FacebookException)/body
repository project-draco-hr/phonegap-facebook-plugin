{
  this.requestStatusCode=requestStatusCode;
  this.errorCode=errorCode;
  this.subErrorCode=subErrorCode;
  this.errorType=errorType;
  this.errorMessage=errorMessage;
  this.requestResultBody=requestResultBody;
  this.requestResult=requestResult;
  this.batchRequestResult=batchRequestResult;
  this.connection=connection;
  this.errorUserTitle=errorUserTitle;
  this.errorUserMessage=errorUserMessage;
  this.errorIsTransient=errorIsTransient;
  boolean isLocalException=false;
  if (exception != null) {
    this.exception=exception;
    isLocalException=true;
  }
 else {
    this.exception=new FacebookServiceException(this,errorMessage);
  }
  Category errorCategory=null;
  int messageId=INVALID_MESSAGE_ID;
  boolean shouldNotify=false;
  if (isLocalException) {
    errorCategory=Category.CLIENT;
    messageId=INVALID_MESSAGE_ID;
  }
 else {
    if (errorCode == EC_UNKNOWN_ERROR || errorCode == EC_SERVICE_UNAVAILABLE) {
      errorCategory=Category.SERVER;
    }
 else     if (errorCode == EC_APP_TOO_MANY_CALLS || errorCode == EC_USER_TOO_MANY_CALLS) {
      errorCategory=Category.THROTTLING;
    }
 else     if (errorCode == EC_PERMISSION_DENIED || EC_RANGE_PERMISSION.contains(errorCode)) {
      errorCategory=Category.PERMISSION;
      messageId=R.string.com_facebook_requesterror_permissions;
    }
 else     if (errorCode == EC_INVALID_SESSION || errorCode == EC_INVALID_TOKEN) {
      if (subErrorCode == EC_USER_CHECKPOINTED || subErrorCode == EC_UNCONFIRMED_USER) {
        errorCategory=Category.AUTHENTICATION_RETRY;
        messageId=R.string.com_facebook_requesterror_web_login;
        shouldNotify=true;
      }
 else {
        errorCategory=Category.AUTHENTICATION_REOPEN_SESSION;
        if ((subErrorCode == EC_APP_NOT_INSTALLED) || (subErrorCode == EC_EXPIRED)) {
          messageId=R.string.com_facebook_requesterror_relogin;
        }
 else         if (subErrorCode == EC_PASSWORD_CHANGED) {
          messageId=R.string.com_facebook_requesterror_password_changed;
        }
 else {
          messageId=R.string.com_facebook_requesterror_reconnect;
          shouldNotify=true;
        }
      }
    }
    if (errorCategory == null) {
      if (HTTP_RANGE_CLIENT_ERROR.contains(requestStatusCode)) {
        errorCategory=Category.BAD_REQUEST;
      }
 else       if (HTTP_RANGE_SERVER_ERROR.contains(requestStatusCode)) {
        errorCategory=Category.SERVER;
      }
 else {
        errorCategory=Category.OTHER;
      }
    }
  }
  shouldNotify=errorUserMessage != null && errorUserMessage.length() > 0;
  this.category=errorCategory;
  this.userActionMessageId=messageId;
  this.shouldNotifyUser=shouldNotify;
}

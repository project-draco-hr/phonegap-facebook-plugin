{
  GraphObject deferredApplinkParams=GraphObject.Factory.create();
  deferredApplinkParams.setProperty("event",DEFERRED_APP_LINK_EVENT);
  Utility.setAppEventAttributionParameters(deferredApplinkParams,AttributionIdentifiers.getAttributionIdentifiers(context),Utility.getHashedDeviceAndAppID(context,applicationId),Settings.getLimitEventAndDataUsage(context));
  deferredApplinkParams.setProperty("application_package_name",context.getPackageName());
  String deferredApplinkUrlPath=String.format(DEFERRED_APP_LINK_PATH,applicationId);
  AppLinkData appLinkData=null;
  try {
    Request deferredApplinkRequest=Request.newPostRequest(null,deferredApplinkUrlPath,deferredApplinkParams,null);
    Response deferredApplinkResponse=deferredApplinkRequest.executeAndWait();
    GraphObject wireResponse=deferredApplinkResponse.getGraphObject();
    JSONObject jsonResponse=wireResponse != null ? wireResponse.getInnerJSONObject() : null;
    if (jsonResponse != null) {
      final String appLinkArgsJsonString=jsonResponse.optString(DEFERRED_APP_LINK_ARGS_FIELD);
      final long tapTimeUtc=jsonResponse.optLong(DEFERRED_APP_LINK_CLICK_TIME_FIELD,-1);
      final String appLinkClassName=jsonResponse.optString(DEFERRED_APP_LINK_CLASS_FIELD);
      final String appLinkUrl=jsonResponse.optString(DEFERRED_APP_LINK_URL_FIELD);
      if (appLinkArgsJsonString != null && appLinkArgsJsonString != "") {
        appLinkData=createFromJson(appLinkArgsJsonString);
        if (tapTimeUtc != -1) {
          try {
            if (appLinkData.arguments != null) {
              appLinkData.arguments.put(ARGUMENTS_TAPTIME_KEY,tapTimeUtc);
            }
            if (appLinkData.argumentBundle != null) {
              appLinkData.argumentBundle.putString(ARGUMENTS_TAPTIME_KEY,Long.toString(tapTimeUtc));
            }
          }
 catch (          JSONException e) {
            Log.d(TAG,"Unable to put tap time in AppLinkData.arguments");
          }
        }
        if (appLinkClassName != null) {
          try {
            if (appLinkData.arguments != null) {
              appLinkData.arguments.put(ARGUMENTS_NATIVE_CLASS_KEY,appLinkClassName);
            }
            if (appLinkData.argumentBundle != null) {
              appLinkData.argumentBundle.putString(ARGUMENTS_NATIVE_CLASS_KEY,appLinkClassName);
            }
          }
 catch (          JSONException e) {
            Log.d(TAG,"Unable to put tap time in AppLinkData.arguments");
          }
        }
        if (appLinkUrl != null) {
          try {
            if (appLinkData.arguments != null) {
              appLinkData.arguments.put(ARGUMENTS_NATIVE_URL,appLinkUrl);
            }
            if (appLinkData.argumentBundle != null) {
              appLinkData.argumentBundle.putString(ARGUMENTS_NATIVE_URL,appLinkUrl);
            }
          }
 catch (          JSONException e) {
            Log.d(TAG,"Unable to put tap time in AppLinkData.arguments");
          }
        }
      }
    }
  }
 catch (  Exception e) {
    Utility.logd(TAG,"Unable to fetch deferred applink from server");
  }
  completionHandler.onDeferredAppLinkDataFetched(appLinkData);
}

{
  int length=(in.length + 2) * 4 / 3;
  byte[] out=new byte[length];
  int index=0, end=in.length - in.length % 3;
  for (int i=0; i < end; i+=3) {
    out[index++]=MAP[(in[i] & 0xff) >> 2];
    out[index++]=MAP[((in[i] & 0x03) << 4) | ((in[i + 1] & 0xff) >> 4)];
    out[index++]=MAP[((in[i + 1] & 0x0f) << 2) | ((in[i + 2] & 0xff) >> 6)];
    out[index++]=MAP[(in[i + 2] & 0x3f)];
  }
switch (in.length % 3) {
case 1:
    out[index++]=MAP[(in[end] & 0xff) >> 2];
  out[index++]=MAP[(in[end] & 0x03) << 4];
out[index++]='=';
out[index++]='=';
break;
case 2:
out[index++]=MAP[(in[end] & 0xff) >> 2];
out[index++]=MAP[((in[end] & 0x03) << 4) | ((in[end + 1] & 0xff) >> 4)];
out[index++]=MAP[((in[end + 1] & 0x0f) << 2)];
out[index++]='=';
break;
}
try {
return new String(out,0,index,"US-ASCII");
}
 catch (UnsupportedEncodingException e) {
throw new AssertionError(e);
}
}

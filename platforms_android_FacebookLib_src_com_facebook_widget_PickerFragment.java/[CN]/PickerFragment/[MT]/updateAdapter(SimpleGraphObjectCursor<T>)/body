{
  if (adapter != null) {
    View view=listView.getChildAt(1);
    int anchorPosition=listView.getFirstVisiblePosition();
    if (anchorPosition > 0) {
      anchorPosition++;
    }
    GraphObjectAdapter.SectionAndItem<T> anchorItem=adapter.getSectionAndItem(anchorPosition);
    final int top=(view != null && anchorItem.getType() != GraphObjectAdapter.SectionAndItem.Type.ACTIVITY_CIRCLE) ? view.getTop() : 0;
    boolean dataChanged=adapter.changeCursor(data);
    if (view != null && anchorItem != null) {
      final int newPositionOfItem=adapter.getPosition(anchorItem.sectionKey,anchorItem.graphObject);
      if (newPositionOfItem != -1) {
        listView.setSelectionFromTop(newPositionOfItem,top);
      }
    }
    if (dataChanged && onDataChangedListener != null) {
      onDataChangedListener.onDataChanged(PickerFragment.this);
    }
    if (selectionHint != null && !selectionHint.isEmpty() && data != null) {
      data.moveToFirst();
      boolean changed=false;
      for (int i=0; i < data.getCount(); i++) {
        data.moveToPosition(i);
        T graphObject=data.getGraphObject();
        if (!graphObject.asMap().containsKey("id"))         continue;
        Object obj=graphObject.getProperty("id");
        if (!(obj instanceof String)) {
          continue;
        }
        String id=(String)obj;
        if (selectionHint.contains(id)) {
          selectionStrategy.toggleSelection(id);
          selectionHint.remove(id);
          changed=true;
        }
        if (selectionHint.isEmpty()) {
          break;
        }
      }
      if (onSelectionChangedListener != null && changed) {
        onSelectionChangedListener.onSelectionChanged(PickerFragment.this);
      }
    }
  }
}

{
  final ArrayList<String> fbids=new ArrayList<String>();
  final ArrayList<String> tokenPermissions=new ArrayList<String>();
  final String newToken=pendingResult.token.getToken();
  Request.Callback meCallback=new Request.Callback(){
    @Override public void onCompleted(    Response response){
      try {
        GraphUser user=response.getGraphObjectAs(GraphUser.class);
        if (user != null) {
          fbids.add(user.getId());
        }
      }
 catch (      Exception ex) {
      }
    }
  }
;
  String validateSameFbidAsToken=pendingRequest.getPreviousAccessToken();
  Request requestCurrentTokenMe=createGetProfileIdRequest(validateSameFbidAsToken);
  requestCurrentTokenMe.setCallback(meCallback);
  Request requestNewTokenMe=createGetProfileIdRequest(newToken);
  requestNewTokenMe.setCallback(meCallback);
  Request requestCurrentTokenPermissions=createGetPermissionsRequest(validateSameFbidAsToken);
  requestCurrentTokenPermissions.setCallback(new Request.Callback(){
    @Override public void onCompleted(    Response response){
      try {
        GraphMultiResult result=response.getGraphObjectAs(GraphMultiResult.class);
        if (result != null) {
          GraphObjectList<GraphObject> data=result.getData();
          if (data != null && data.size() == 1) {
            GraphObject permissions=data.get(0);
            tokenPermissions.addAll(permissions.asMap().keySet());
          }
        }
      }
 catch (      Exception ex) {
      }
    }
  }
);
  RequestBatch batch=new RequestBatch(requestCurrentTokenMe,requestNewTokenMe,requestCurrentTokenPermissions);
  batch.setBatchApplicationId(pendingRequest.getApplicationId());
  batch.addCallback(new RequestBatch.Callback(){
    @Override public void onBatchCompleted(    RequestBatch batch){
      try {
        Result result=null;
        if (fbids.size() == 2 && fbids.get(0) != null && fbids.get(1) != null && fbids.get(0).equals(fbids.get(1))) {
          AccessToken tokenWithPermissions=AccessToken.createFromTokenWithRefreshedPermissions(pendingResult.token,tokenPermissions);
          result=Result.createTokenResult(pendingRequest,tokenWithPermissions);
        }
 else {
          result=Result.createErrorResult(pendingRequest,"User logged in as different Facebook user.",null);
        }
        complete(result);
      }
 catch (      Exception ex) {
        complete(Result.createErrorResult(pendingRequest,"Caught exception",ex.getMessage()));
      }
 finally {
        notifyBackgroundProcessingStop();
      }
    }
  }
);
  return batch;
}
